:root {
	/* The baseline font size on which everything else is set. */
	--base: 100%;

	/* Defines the vertical rhythm and font scale of the site. */
	--rhythm: 1.5;

	/* Theme colors - light */
	--color-background: hsl(0, 0%,  98%);
	--color-body:       hsl(0, 0%,  30%);
	--color-info:       hsl(0, 0%,  50%);
	--color-button:     hsl(0, 0%,  90%);

	/* Theme colors - dark */
	/*
	--color-background: hsl(0, 0%,  10%);
	--color-body:       hsl(0, 0%,  75%);
	--color-info:       hsl(0, 0%,  50%);
	--color-button:     hsl(0, 0%,  20%);
	*/

	/* Theme font stacks */
	--font-body: "Helvetica Neue", Helvetica, "Segoe UI", roboto, oxygen-sans, ubuntu, cantarell, sans-serif;

	/* Theme font weights */
	--weight-body: 400;
}

*,
*::before,
*::after {
	box-sizing: border-box;
}

* {
	margin: 0;
}

html {
	font-size: var(--base);
}

@media screen and (min-width: 50rem) {
	html {
		font-size: calc(1.2 * var(--base));
	}
}

body {
	font-size: 1rem;
	line-height: calc(1em * var(--rhythm));
	background-color: var(--color-background);
	color: var(--color-body);
	font-family: var(--font-body);
	font-weight: var(--weight-body);
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: auto;
	-moz-osx-font-smoothing: auto;
}

p,
h1,
h2,
li {
	overflow-wrap: break-word;
}

a {
	color: var(--color-body);
	text-decoration-line: underline;
	text-underline-offset: calc(0.03125rem * var(--rhythm));
	text-decoration-thickness: 1px;
	text-decoration-color: var(--color-body);
	text-decoration-skip-ink: all;
}

a:hover,
a:focus {
	text-decoration-thickness: 2px;
	text-decoration-color: var(--color-body);
	text-decoration-skip-ink: all;
}

h1,
h2 {
	font-weight: var(--weight-body);
}

h1 {
	font-size: calc(1rem);
	line-height: calc(1em * var(--rhythm));
	font-weight: 900;
}

h2 {
	font-size: 1rem;
	line-height: calc(1em * var(--rhythm));
	font-weight: 400;
	text-transform: uppercase;
	letter-spacing: 0.2em;
}

abbr {
	text-decoration-thickness: 2px;
	text-decoration-style: dotted;
}

* + * {
	margin-top: calc(1rem * var(--rhythm));
}

.Container {
	margin: calc(1rem * var(--rhythm)) 0 calc(4rem * var(--rhythm));
	padding: 0 calc(1rem * var(--rhythm));
}

@media (min-width: 40rem) {
	.Container {
		margin: calc(2rem * var(--rhythm)) 0 calc(4rem * var(--rhythm));
		padding: 0 calc(2rem * var(--rhythm));
	}
}

@media (min-width: 50rem) {
	.Container {
		max-width: calc(30rem * var(--rhythm));
		margin: calc(4rem * var(--rhythm));
		margin-bottom: calc(8rem * var(--rhythm));
	}
}

.ContainerHeader {
	padding-bottom: calc(2rem * var(--rhythm));
	display: flex;
	align-items: start;
	align-content: stretch;
	justify-items: flex-start;
	gap: calc(1rem * var(--rhythm));
}

.ContainerNav {
	margin-top: 0;
}

.ContainerNav-List {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	justify-content: flex-start;
	align-items: stretch;
	flex-wrap: wrap;
	gap: calc(0.25rem * var(--rhythm));
}

.ContainerNav-ListItem {
	margin-top: 0;
}

.ContainerNav-ListItem a {
	text-decoration: none;
	padding: 0.25rem 0.5rem;
	border-radius: 0.35rem;
}

.ContainerNav-ListItem a:hover,
.ContainerNav-ListItem a:focus {
	background-color: var(--color-button);
}

.ContainerContent section {
	padding: calc(2rem * var(--rhythm)) 0;
}

.ContainerContent ul {
	list-style: none;
	margin: 0;
	padding: calc(0.5rem * var(--rhythm)) 0 0 0;
}

.ContainerContent ul > li {
	display: block;
	margin: calc(0.5rem * var(--rhythm)) 0 0 0;
}

.ContainerContent ul > li.Quoted {
	text-indent: -0.45rem;
}

.Me {
	display: block;
	border-bottom-right-radius: calc(1rem * var(--rhythm));
	width: calc(5rem * var(--rhythm));
	border: 3px solid var(--color-body);
}

.SiteName {
	text-decoration: none;
}

.Info {
	color: var(--color-info);
}

.Copy {
	color: var(--color-info);
	display: block;
}

@media screen and (min-width: 50rem) {
	.Copy {
		display: inline-block;
		margin: 0;
		margin-left: calc(1rem * var(--rhythm));
	}
}

.Button {
	text-decoration: none;
	padding: 0.25rem 0.5rem;
	border-radius: 0.35rem;
	background-color: var(--color-button);
}

.Button:hover,
.Button:focus {
	background-color: var(--color-body);
	color: var(--color-background);
}

@media screen and (min-width: 50rem) {
	.Standard,
	.Platform,
	.Software {
		display: inline-block;
		min-width: calc(5rem * var(--rhythm));
	}
	
}
