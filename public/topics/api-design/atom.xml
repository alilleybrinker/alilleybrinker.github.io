<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Andrew Lilley Brinker — Software Supply Chain Security - API Design</title>
    <subtitle>I work on software supply chain security at MITRE, including serving as amember of the OmniBOR Working Group, where I lead development of the Rustimplementation, and as the project manager for Hipcheck, a tool forautomated supply chain risk assessment of software packages.
</subtitle>
    <link rel="self" type="application/atom+xml" href="https://www.alilleybrinker.com/topics/api-design/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://www.alilleybrinker.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-04-04T00:00:00+00:00</updated>
    <id>https://www.alilleybrinker.com/topics/api-design/atom.xml</id>
    <entry xml:lang="en">
        <title>Softlocking APIs</title>
        <published>2024-04-04T00:00:00+00:00</published>
        <updated>2024-04-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://www.alilleybrinker.com/blog/softlocking-apis/"/>
        <id>https://www.alilleybrinker.com/blog/softlocking-apis/</id>
        
        <summary type="html">&lt;p&gt;“Softlocking” is a term in the world of video games where a game is playable, but can’t
make forward progress. Usually this means the game has a bug, or that the designers and
quality assurance testers missed some combination of steps that leads to an inability
to complete the game. It’s basically a video game version of “livelock” failures in
concurrent programs, but “softlock” is (to me) the more fun term, so let’s use it.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
