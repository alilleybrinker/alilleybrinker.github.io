<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Andrew Lilley Brinker — Software Supply Chain Security - Memory Safety</title>
    <subtitle>I work on software supply chain security at MITRE, including serving as amember of the OmniBOR Working Group, where I lead development of the Rustimplementation, and as the project manager for Hipcheck, a tool forautomated supply chain risk assessment of software packages.
</subtitle>
    <link rel="self" type="application/atom+xml" href="https://www.alilleybrinker.com/topics/memory-safety/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://www.alilleybrinker.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-07-16T00:00:00+00:00</updated>
    <id>https://www.alilleybrinker.com/topics/memory-safety/atom.xml</id>
    <entry xml:lang="en">
        <title>C++ Must Become Safer</title>
        <published>2024-07-16T00:00:00+00:00</published>
        <updated>2024-07-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://www.alilleybrinker.com/blog/cpp-must-become-safer/"/>
        <id>https://www.alilleybrinker.com/blog/cpp-must-become-safer/</id>
        
        <summary type="html">&lt;p&gt;Not everything will be rewritten in Rust, so C++ &lt;em&gt;must&lt;&#x2F;em&gt; become safer, and we
should all care about C++ becoming safer.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Renegotiating C</title>
        <published>2024-02-19T00:00:00+00:00</published>
        <updated>2024-02-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://www.alilleybrinker.com/blog/renegotiating-c/"/>
        <id>https://www.alilleybrinker.com/blog/renegotiating-c/</id>
        
        <summary type="html">&lt;p&gt;I am tying myself in a knot.&lt;&#x2F;p&gt;
&lt;p&gt;It all started when I read “&lt;a href=&quot;https:&#x2F;&#x2F;nedbatchelder.com&#x2F;blog&#x2F;202401&#x2F;you_probably_dont_need_to_learn_c.html&quot;&gt;You (Probably) Don’t Need to Learn C&lt;&#x2F;a&gt;,” a good article
which raises good points about the poor arguments people tend to make when defending
the choice of learning C in this day and age. First and foremost: “you should learn
C so you know how a computer really works.” The article itself refers then to David
Chisnall’s “&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;pdf&#x2F;10.1145&#x2F;3212477.3212479&quot;&gt;C is Not a Low-Level Language&lt;&#x2F;a&gt;,” so I’ll do the same because it makes the
case better than I can. C is not the computer. C is (maybe) the only interface to
syscalls exposed by the operating system, depending on the system. C is (definitely)
an important part of computing history and computing today.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Technostructuralism</title>
        <published>2019-04-03T00:00:00+00:00</published>
        <updated>2019-04-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://www.alilleybrinker.com/blog/technostructuralism/"/>
        <id>https://www.alilleybrinker.com/blog/technostructuralism/</id>
        
        <summary type="html">&lt;p&gt;So Steve Klabnik posted a really thoughtful piece on open source and free software
(&lt;a href=&quot;https:&#x2F;&#x2F;words.steveklabnik.com&#x2F;what-comes-after-open-source&quot;&gt;read it if you haven’t&lt;&#x2F;a&gt;),
and the responses on places like Hacker News made an error that seems common in these
circles: believing working harder will solve a problem.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
